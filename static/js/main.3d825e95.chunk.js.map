{"version":3,"sources":["components/tweet.js","components/mainParagraph.js","pages/home.js","pages/about.js","pages/breaking_news.js","pages/contact.js","pages/contact_submit.js","components/time.js","components/Nav.js","components/Title.js","components/header.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["tweet","className","this","props","tweetId","TweetID","Component","MainParagraph","Home","id","src","alt","About","window","scrollTo","class","breaking_news","title","Form","state","name","email","message","onSubmit","handleSubmit","bind","htmlFor","type","value","onChange","onNameChange","aria-describedby","onEmailChange","rows","onMessageChange","event","setState","target","history","push","React","contact_submit","DisplayTime","time","Date","toLocaleTimeString","setInterval","Nav","isClicked_about","isClicked_breaking_news","isClicked_contact","isClicked_home","containerName","to","style","textDecoration","color","border","fontSize","header","onClick","Title","Header","Footer","App","path","component","BreakingNews","exact","Contact","ContactSubmit","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"yRAgBeA,EAVf,uKAEQ,OACI,yBAAKC,UAAaC,KAAKC,MAAMF,WAC1B,kBAAC,IAAD,CAAmBG,QAASF,KAAKC,MAAME,eAJtD,GAA2BC,aCkBZC,E,uKApBP,OACI,yBAAKN,UAAaC,KAAKC,MAAMF,WACzB,wBAAIA,UAAY,aAAhB,aACA,gnG,GALYK,aC+BbE,E,uKA1BP,OACI,yBAAKC,GAAK,gBAEN,yBAAKR,UAAY,UAEb,kBAAC,EAAD,CAAcI,QAAW,sBAAuBJ,UAAY,cAC5D,kBAAC,EAAD,CAAcI,QAAW,sBAAuBJ,UAAY,cAC5D,kBAAC,EAAD,CAAcI,QAAW,sBAAuBJ,UAAY,eAKpE,yBAAKA,UAAY,iBACb,yBAAKA,UAAY,YAAYS,IAAM,+HAA+HC,IAAM,gBACxK,kBAAC,EAAD,CAAeV,UAAY,mB,GAjBxBK,aCcJM,EAhBf,kLAEQC,OAAOC,SAAS,EAAG,KAF3B,+BAKQ,OACI,yBAAKC,MAAQ,SACT,wBAAIA,MAAQ,eAAZ,0BACA,uBAAGA,MAAQ,aAAX,i9BACA,uBAAGA,MAAQ,aAAX,i9BACA,uBAAGA,MAAQ,aAAX,s9BAVhB,GAA2BT,aCeZU,EAff,kLAEQH,OAAOC,SAAS,EAAG,KAF3B,+BAMQ,OACI,6BACI,4BAAQG,MAAQ,OAAOP,IAAI,sCAAsCD,GAAK,6BARtF,GAAmCH,aCwDpBY,E,kDAtDX,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,KAAM,GACNC,MAAO,GACPC,QAAS,IALC,E,qDAUZ,OACI,yBAAKrB,UAAU,gBACb,wBAAIQ,GAAK,cAAT,gBAEA,0BAAMR,UAAU,eAAesB,SAAUrB,KAAKsB,aAAaC,KAAKvB,OAC5D,yBAAKD,UAAU,cACf,2BAAOyB,QAAQ,OAAOzB,UAAY,cAAlC,QACA,2BAAO0B,KAAK,OAAO1B,UAAU,eAAe2B,MAAO1B,KAAKiB,MAAMC,KAAMS,SAAU3B,KAAK4B,aAAaL,KAAKvB,SAErG,yBAAKD,UAAU,cACf,2BAAOyB,QAAQ,qBAAqBzB,UAAY,cAAhD,iBACA,2BAAO0B,KAAK,QAAQ1B,UAAU,eAAe8B,mBAAiB,YAAYH,MAAO1B,KAAKiB,MAAME,MAAOQ,SAAU3B,KAAK8B,cAAcP,KAAKvB,SAGrI,yBAAKD,UAAU,cACf,2BAAOyB,QAAQ,UAAUzB,UAAY,cAArC,WACA,8BAAUA,UAAU,eAAegC,KAAK,IAAIL,MAAO1B,KAAKiB,MAAMG,QAASO,SAAU3B,KAAKgC,gBAAgBT,KAAKvB,SAE3G,4BAAQyB,KAAK,SAAS1B,UAAU,eAAhC,c,mCAOCkC,GACXjC,KAAKkC,SAAS,CAAChB,KAAMe,EAAME,OAAOT,U,oCAGtBO,GACZjC,KAAKkC,SAAS,CAACf,MAAOc,EAAME,OAAOT,U,sCAGrBO,GACdjC,KAAKkC,SAAS,CAACd,QAASa,EAAME,OAAOT,U,mCAI1BO,GACXjC,KAAKC,MAAMmC,QAAQC,KAAK,uB,GAlDXC,IAAMlC,WCWVmC,E,uKAVP,OACI,yBAAKhC,GAAK,kBACN,wDACA,iFACA,yBAAKE,IAAM,eAAeF,GAAK,kBAAkBC,IAAM,4H,GAN1CJ,aC4BdoC,E,kDA1BX,aAAc,IAAD,8BACT,gBACKvB,MAAQ,CACTwB,MAAM,IAAIC,MAAOC,sBAHZ,E,gEAQQ,IAAD,OAChBC,aAAY,WACR,EAAKV,SAAS,CACVO,MAAM,IAAIC,MAAOC,yBAGtB,O,+BAIH,OACI,yBAAK5C,UAAY,gBACZC,KAAKiB,MAAMwB,U,GArBFrC,a,QC4EXyC,E,kDA3EX,aAAc,IAAD,8BACT,gBACK5B,MAAQ,CACT6B,iBAAiB,EACjBC,yBAAyB,EACzBC,mBAAmB,EACnBC,gBAAgB,GANX,E,qDAUH,IAAD,OAEL,OACI,yBAAKlD,UAAaC,KAAKC,MAAMiD,eAIzB,wBAAInD,UAAS,UAAOC,KAAKC,MAAMF,UAAlB,YACT,kBAAC,IAAD,CAAMoD,GAAK,QAAQC,MAAO,CAACC,eAAgB,OAAQC,MAAO,QAASC,OAAQvD,KAAKiB,MAAMgC,eAAiB,kBAAmB,OAAQO,SAAUxD,KAAKiB,MAAMgC,gBAAkBjD,KAAKC,MAAMwD,OAAQ,MAAO,IAAKC,QAAW,kBAAM,EAAKxB,SAAS,CACnOY,iBAAiB,EACjBC,yBAAyB,EACzBC,mBAAmB,EACnBC,gBAAgB,GACjBtC,OAAOC,SAAS,EAAE,MALrB,SAWJ,wBAAIb,UAAS,UAAOC,KAAKC,MAAMF,UAAlB,YACT,kBAAC,IAAD,CAAMoD,GAAK,iBAAiBC,MAAO,CAACC,eAAgB,OAAQC,MAAO,QAASC,OAAQvD,KAAKiB,MAAM8B,wBAA0B,kBAAmB,OAAQS,SAAUxD,KAAKiB,MAAM8B,yBAA2B/C,KAAKC,MAAMwD,OAAQ,MAAO,IAAKC,QAAW,kBAAM,EAAKxB,SAAS,CAC9Pa,yBAAyB,EACzBD,iBAAiB,EACjBE,mBAAmB,EACnBC,gBAAgB,MAJpB,kBAYJ,wBAAIlD,UAAS,UAAOC,KAAKC,MAAMF,UAAlB,YACT,kBAAC,IAAD,CAAMoD,GAAK,SAASC,MAAO,CAACC,eAAgB,OAAQC,MAAO,QAASC,OAAQvD,KAAKiB,MAAM6B,gBAAkB,kBAAmB,OAAQU,SAAUxD,KAAKiB,MAAM6B,iBAAmB9C,KAAKC,MAAMwD,OAAQ,MAAO,IAAKC,QAAW,kBAAM,EAAKxB,SAAS,CACtOY,iBAAiB,EACjBC,yBAAyB,EACzBC,mBAAmB,EACnBC,gBAAgB,MAJpB,UAYJ,wBAAIlD,UAAS,UAAOC,KAAKC,MAAMF,UAAlB,YACT,kBAAC,IAAD,CAAMoD,GAAK,WAAWC,MAAO,CAACC,eAAgB,OAAQC,MAAO,QAASC,OAAQvD,KAAKiB,MAAM+B,kBAAoB,kBAAmB,OAAQQ,SAAUxD,KAAKiB,MAAM+B,mBAAqBhD,KAAKC,MAAMwD,OAAS,MAAO,IAAKC,QAAW,kBAAM,EAAKxB,SAAS,CAC7OY,iBAAiB,EACjBC,yBAAyB,EACzBC,mBAAmB,EACnBC,gBAAgB,MAJpB,iB,GAzDF7C,aCUHuD,E,uKARP,OACI,yBAAK5D,UAAaC,KAAKC,MAAMF,WACzB,iD,GAJIK,aCiBLwD,E,uKAbP,OACI,6BACA,4BAAQ7D,UAAU,cACd,kBAAC,EAAD,MACA,yBAAKS,IAAK,iHAAiHT,UAAU,WAAWU,IAAI,SACnJ,kBAAC,EAAD,CAAOV,UAAY,UACpB,kBAAC,EAAD,CAAKA,UAAY,SAASmD,cAAgB,mBAAmBO,OAAS,e,GARjErD,aCUNyD,E,uKAVP,OACI,6BACK,gCACD,kBAAC,EAAD,CAAK9D,UAAY,SAASmD,cAAgB,2B,GALrC9C,a,OCoCN0D,MAzBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK/D,UAAU,OACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgE,KAAO,QAAQC,UAAa1D,IACnC,kBAAC,IAAD,CAAOyD,KAAO,SAAUC,UAAatD,IACrC,kBAAC,IAAD,CAAOqD,KAAO,iBAAgBC,UAAaC,IAC3C,kBAAC,IAAD,CAAOF,KAAO,WAAWG,OAAK,EAACF,UAAaG,IAC5C,kBAAC,IAAD,CAAOJ,KAAO,kBAAkBC,UAAaI,IAC7C,kBAAC,IAAD,CAAOL,KAAO,IAAIC,UAAa1D,KAIjC,kBAAC,EAAD,SClBY+D,QACW,cAA7B1D,OAAO2D,SAASC,UAEe,UAA7B5D,OAAO2D,SAASC,UAEhB5D,OAAO2D,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMjE,c","file":"static/js/main.3d825e95.chunk.js","sourcesContent":["import {TwitterTweetEmbed} from 'react-twitter-embed'\r\nimport React, { Component } from 'react'\r\n\r\n\r\n\r\n\r\nexport class tweet extends Component {\r\n    render() {\r\n        return (\r\n            <div className = {this.props.className}>\r\n               <TwitterTweetEmbed tweetId={this.props.TweetID}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default tweet\r\n","import React, { Component } from 'react'\r\n\r\nclass MainParagraph extends Component {\r\n    render() {\r\n        return (\r\n            <div className = {this.props.className}>\r\n                <h2 className = 'par-title'> Karachi </h2>\r\n                <p>\r\n                    \r\n                Karachi is the capital of the Pakistani province of Sindh. It is the largest city in Pakistan and the seventh largest city proper in the world. Ranked as a beta-global city, the city is Pakistan's premier industrial and financial centre, with an estimated GDP of $114 billion  as of 2014. Karachi is Pakistan's most cosmopolitan city, its most linguistically, ethnically, and religiously diverse city, as well as one of Pakistan's most secular and socially liberal cities. With its location on the Arabian Sea, Karachi serves as a transport hub, and is home to Pakistan's two largest seaports, the Port of Karachi and Port Bin Qasim, as well as Pakistan's busiest airport, Jinnah International Airport.\r\n\r\n                Though the Karachi region has been inhabited for millennia, the city was founded as the fortified village of Kolachi in 1729. The settlement drastically increased in importance with the arrival of British East India Company in the mid 19th century. The British embarked on major works to transform the city into a major seaport, and connected it with their extensive railway network. By the time of the Partition of British India, the city was the largest in Sindh with an estimated population of 400,000. Following the independence of Pakistan, the city's population increased dramatically with the arrival of hundreds of thousands of Muslim refugees from India. The city experienced rapid economic growth following independence, attracting migrants from throughout Pakistan and South Asia. According to the 2017 census, Karachi's total population was 16,051,521 and its urban population was 14.9 million. Karachi is one of the world's fastest growing cities, and has communities representing almost every ethnic group in Pakistan. Karachi is home to more than two million Bangladeshi immigrants, a million Afghan refugees, and up to 400,000 Rohingyas from Myanmar.\r\n\r\n                Karachi is now Pakistan's premier industrial and financial centre. The city has a formal economy estimated to be worth $114 billion as of 2014 which is the largest in Pakistan. Karachi collects more than a third of Pakistan's tax revenue,and generates approximately 20% of Pakistan's GDP. Approximately 30% of Pakistani industrial output is from Karachi, while Karachi's ports handle approximately 95% of Pakistan's foreign trade. Approximately 90% of the multinational corporations operating in Pakistan are headquartered in Karachi. Karachi is considered to be Pakistan's fashion capital, and has hosted the annual Karachi Fashion Week since 2009.\r\n\r\n                Known as the \"City of Lights\" in the 1960s and 1970s for its vibrant nightlife, Karachi was beset by sharp ethnic, sectarian, and political conflict in the 1980s with the arrival of weaponry during the Sovietâ€“Afghan War. The city had become well known for its high rates of violent crime, but recorded crimes sharply decreased following a controversial crackdown operation against criminals, the MQM political party, and Islamist militants initiated in 2013 by the Pakistan Rangers. As a result of the operation, Karachi went from being ranked the world's 6th most dangerous city for crime in 2014, to 93rd by early 2020.\r\n                </p>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainParagraph","import React, { Component } from 'react'\r\nimport TweetElement from '../components/tweet.js'\r\nimport MainParagraph from '../components/mainParagraph'\r\n\r\nclass Home extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id = 'home-content'>\r\n               \r\n                <div className = 'Tweets'>\r\n                \r\n                    <TweetElement TweetID = {'1307146933513998337'} className = 'testTweet'/>\r\n                    <TweetElement TweetID = {'1307139737434587137'} className = 'testTweet'/>\r\n                    <TweetElement TweetID = {'1307137757366681600'} className = 'testTweet'/>\r\n                </div>\r\n\r\n              \r\n                \r\n            <div className = 'AppBody-right'>\r\n                <img className = 'wordCloud' src = 'https://media.discordapp.net/attachments/754009532136685569/761710495773753420/karachi_wordcloud_1.png?width=1194&height=677' alt = 'wasnt found'/>\r\n                <MainParagraph className = 'main-par'/>\r\n            </div>\r\n            \r\n            \r\n    \r\n               \r\n           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class About extends Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n    render() {\r\n        return (\r\n            <div class = 'about'>\r\n                <h1 class = 'about-title'> Welcome to Karachi 24</h1>\r\n                <p class = 'about-par'> \"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"</p>\r\n                <p class = 'about-par'> \"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"</p>\r\n                <p class = 'about-par'> \"But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system, and expound the actual teachings of the great explorer of the truth, the master-builder of human happiness. No one rejects, dislikes, or avoids pleasure itself, because it is pleasure, but because those who do not know how to pursue pleasure rationally encounter consequences that are extremely painful. Nor again is there anyone who loves or pursues or desires to obtain pain of itself, because it is pain, but because occasionally circumstances occur in which toil and pain can procure him some great pleasure. To take a trivial example, which of us ever undertakes laborious physical exercise, except to obtain some advantage from it? But who has any right to find fault with a man who chooses to enjoy a pleasure that has no annoying consequences, or one who avoids a pain that produces no resultant pleasure?\"</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\n\r\nexport class breaking_news extends Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0)\r\n      }\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <iframe title = 'none' src=\"https://public.domo.com/cards/bWxVg\" id = 'breaking-news-chart'></iframe>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default breaking_news\r\n","import React from 'react'\r\n\r\n\r\nclass Form extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        name: '',\r\n        email: '',\r\n        message: ''\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n          <div className=\"contact-form\">\r\n            <h1 id = 'form-title'> Contact us!</h1>\r\n\r\n            <form className=\"contact-form\" onSubmit={this.handleSubmit.bind(this)}>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"name\" className = 'form-label'>Name</label>\r\n                <input type=\"text\" className=\"form-control\" value={this.state.name} onChange={this.onNameChange.bind(this)} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"exampleInputEmail1\" className = 'form-label'>Email address</label>\r\n                <input type=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" value={this.state.email} onChange={this.onEmailChange.bind(this)}/>\r\n                \r\n                </div>\r\n                <div className=\"form-group\">\r\n                <label htmlFor=\"message\" className = 'form-label'>Message</label>\r\n                <textarea className=\"form-control\" rows=\"5\" value={this.state.message} onChange={this.onMessageChange.bind(this)} />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn-primary\">Submit</button>\r\n            </form>\r\n            \r\n          </div>\r\n      );\r\n    }\r\n  \r\n    onNameChange(event) {\r\n      this.setState({name: event.target.value})\r\n    }\r\n  \r\n    onEmailChange(event) {\r\n      this.setState({email: event.target.value})\r\n    }\r\n  \r\n    onMessageChange(event) {\r\n      this.setState({message: event.target.value})\r\n      \r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      this.props.history.push('/contact-submit')\r\n    \r\n    }\r\n  }\r\n  \r\nexport default Form;","import React, { Component } from 'react'\r\n\r\nclass contact_submit extends Component {\r\n    render() {\r\n        return (\r\n            <div id = 'contact-submit'>\r\n                <h1> Contact Form Submitted!</h1>\r\n                <h2> Thanks for reaching out, you will hear back soon</h2>\r\n                <img alt = 'error, sorry' id = 'submit-form-img' src = 'https://external-content.duckduckgo.com/iu/?u=http%3A%2F%2Fcdn.onlinewebfonts.com%2Fsvg%2Fimg_35690.png&f=1&nofb=1'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default contact_submit\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass DisplayTime extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            time: new Date().toLocaleTimeString()\r\n        }\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            this.setState({\r\n                time: new Date().toLocaleTimeString()\r\n         \r\n          })\r\n        }, 1000)\r\n      }\r\n\r\n    render() {\r\n        return (\r\n            <div className = 'display_time'>\r\n                {this.state.time}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DisplayTime\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Nav extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            isClicked_about: false,\r\n            isClicked_breaking_news: false,\r\n            isClicked_contact: false,\r\n            isClicked_home: true\r\n        }\r\n    }\r\n\r\n    render() {\r\n    \r\n        return (\r\n            <div className = {this.props.containerName}>\r\n\r\n\r\n               \r\n                <ul className = {`${this.props.className}_elem_1`}> \r\n                    <Link to = '/home' style={{textDecoration: 'none', color: 'black', border: this.state.isClicked_home ? '0px solid white': 'none', fontSize: this.state.isClicked_home && this.props.header ?'5vh': ''}} onClick = {() => this.setState({\r\n                        isClicked_about: false,\r\n                        isClicked_breaking_news: false, \r\n                        isClicked_contact: false,\r\n                        isClicked_home: true\r\n                    }, window.scrollTo(0,0))}>\r\n                        Home\r\n                    </Link>\r\n                </ul>\r\n            \r\n            \r\n                <ul className = {`${this.props.className}_elem_2`} >\r\n                    <Link to = '/breaking-news' style={{textDecoration: 'none', color: 'black', border: this.state.isClicked_breaking_news ? '0px solid white': 'none', fontSize: this.state.isClicked_breaking_news && this.props.header ?'5vh': ''}} onClick = {() => this.setState({\r\n                        isClicked_breaking_news: true,\r\n                        isClicked_about: false,\r\n                        isClicked_contact: false,\r\n                        isClicked_home: false\r\n                    })}>\r\n                        Breaking News\r\n                    </Link>\r\n                </ul>\r\n            \r\n\r\n            \r\n                <ul className = {`${this.props.className}_elem_3`}>\r\n                    <Link to = '/about' style={{textDecoration: 'none', color: 'black', border: this.state.isClicked_about ? '0px solid white': 'none', fontSize: this.state.isClicked_about && this.props.header ?'5vh': ''}} onClick = {() => this.setState({\r\n                        isClicked_about: true,\r\n                        isClicked_breaking_news: false, \r\n                        isClicked_contact: false,\r\n                        isClicked_home: false\r\n                    })}>\r\n                        About\r\n                    </Link>\r\n                </ul>\r\n            \r\n\r\n        \r\n                <ul className = {`${this.props.className}_elem_4`}>\r\n                    <Link to = '/contact' style={{textDecoration: 'none', color: 'black', border: this.state.isClicked_contact ? '0px solid white': 'none', fontSize: this.state.isClicked_contact && this.props.header ? '5vh': ''}} onClick = {() => this.setState({\r\n                        isClicked_about: false,\r\n                        isClicked_breaking_news: false, \r\n                        isClicked_contact: true,\r\n                        isClicked_home: false\r\n                    })}>\r\n                        Contact\r\n                    </Link>\r\n                </ul>\r\n\r\n\r\n            \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Nav\r\n","import React, { Component } from 'react'\r\n\r\n\r\nclass Title extends Component {\r\n    render() {\r\n        return (\r\n            <div className = {this.props.className}>\r\n                <h1> Karachi 24 </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title\r\n","import React, { Component } from 'react'\r\nimport DisplayTime from '../components/time'\r\nimport Nav from '../components/Nav'\r\nimport Title from '../components/Title'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n            <header className=\"App-header\">\r\n                <DisplayTime/>\r\n                <img src= 'https://media.discordapp.net/attachments/757033381396480013/761738130771804180/X24_Resized_and_transparent.png' className=\"App-logo\" alt=\"logo\" />\r\n                 <Title className = 'Title'/>\r\n                <Nav className = 'header' containerName = 'header_container' header = 'true'/> \r\n            </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\nimport Nav from '../components/Nav.js'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <footer>\r\n                <Nav className = 'footer' containerName = 'footer_container'/>\r\n                </footer>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Home from './pages/home.js'\r\nimport About from './pages/about.js'\r\nimport BreakingNews from './pages/breaking_news'\r\nimport Contact from './pages/contact'\r\nimport ContactSubmit from './pages/contact_submit'\r\nimport Header from './components/header'\r\nimport Footer from './components/footer'\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header/>\r\n\r\n        <Switch>\r\n          <Route path = '/home' component = {Home}/>\r\n          <Route path = '/about'  component = {About}/>\r\n          <Route path = '/breaking-news'component = {BreakingNews}/>\r\n          <Route path = '/contact' exact component = {Contact}/>\r\n          <Route path = '/contact-submit' component = {ContactSubmit}/>\r\n          <Route path = '/' component = {Home}/>\r\n        </Switch>\r\n        \r\n     \r\n        <Footer/> \r\n      \r\n      </div>\r\n    </Router>\r\n\r\n  \r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}